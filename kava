#!/bin/bash

source $HOME/.config/kava/config


main () {
feh --bg-scale "$image"
cp "$image" $HOME/.config/kava/wally_temp.jpg
image_temp="$HOME/.config/kava/wally_temp.jpg"

while true; do
    for ((i=0; i < ${#coordinates[@]}; i++)); do
        current="$(mpc current --format '%artist% - %album%')"
        mpc idle player>/dev/null 2>&1
        sleep 1
        if [[ -z $(mpc current) ]]; then
            :
        elif [[ $(mpc current --format '%artist% - %album%') == "$current" ]]; then
            :
        else
            dir="$(dirname "$(mpc current --format %file%)")"
            cd "$mpdpath"/"$dir"
            if [[ -a cover.png ]]; then
                echo "Cover for \""$(mpc current -f '%artist% - %album%')"\" found, setting wallpaper..."
                cp cover.png /tmp/cover.png
                mogrify -resize "$size" -bordercolor snow -background black +polaroid /tmp/cover.png
                convert -size "$res" "$image_temp" -page ${coordinates[$i]} /tmp/cover.png -layers flatten "$wallpaper"
                feh --bg-scale "$wallpaper"
                cp "$wallpaper" "$image_temp"
                rm /tmp/cover.png
            elif [[ -a folder.jpg ]]; then
                convert folder.jpg /tmp/cover.png
                mogrify -resize "$size" -bordercolor snow -background black +polaroid /tmp/cover.png
                convert -size "$res" "$image_temp" -page ${coordinates[$i]} /tmp/cover.png -layers flatten "$wallpaper"
                feh --bg-scale "$wallpaper"
                cp "$wallpaper" "$image_temp"
            elif [[ -a cover.jpg ]]; then
                convert cover.jpg /tmp/cover.png
                mogrify -resize "$size" -bordercolor snow -background black +polaroid /tmp/cover.png
                convert -size "$res" "$image_temp" -page ${coordinates[$i]} /tmp/cover.png -layers flatten "$wallpaper"
                feh --bg-scale "$wallpaper"
                cp "$wallpaper" "$image_temp"
            else
                getCover
            fi
        fi
    done
done
}

getCover () {
    if [[ $1 == "noset" ]]; then
        cover=$(get-cover "$(mpc current -f %artist%)" "$(mpc current -f %album%)")
        cd "$mpdpath"/"$dir"
        if [[ $cover == "Fetch error." ]]; then
            echo "...could not download cover for \""$(mpc current -f '%artist% - %album%')"\""
        else
            echo "...found cover, saving"
            wget "$cover" -O cover>/dev/null 2>&1
        fi
        if [[ $(file --mime-type cover | awk '{ print $NF }') == "image/png" ]]; then
            mv cover cover.png
        elif [[ $(file --mime-type cover | awk '{ print $NF }') == "image/jpeg" ]]; then
            mv cover cover.jpg
        fi
    else
        cover=$(get-cover "$(mpc current -f %artist%)" "$(mpc current -f %album%)")
        cd "$mpdpath"/"$dir"
        if [[ $cover == "Fetch error." ]]; then
            echo "...could not download cover for \""$(mpc current -f '%artist% - %album%')"\", setting placeholder image..."
            convert -resize "$size" "$noimage" -bordercolor snow -background black -polaroid "$angle" /tmp/cover.png
            convert -size "$res" "$image_temp" -page ${coordinates[$i]} /tmp/cover.png -layers flatten "$wallpaper"
            feh --bg-scale "$wallpaper"
            cp "$wallpaper" "$image_temp"
        else
            echo "...found cover, setting wallpaper"
            wget "$cover" -O cover>/dev/null 2>&1
        fi
        if [[ $(file --mime-type cover | awk '{ print $NF }') == "image/png" ]]; then
            mv cover cover.png
            cp cover.png /tmp/cover.png
            mogrify -resize "$size" -bordercolor snow -background black -polaroid "$angle" /tmp/cover.png
            convert -size "$res" "$image_temp" -page ${coordinates[$i]} /tmp/cover.png -layers flatten "$wallpaper"
            feh --bg-scale "$wallpaper"
            cp "$wallpaper" "$image_temp"
            rm /tmp/cover.png
        elif [[ $(file --mime-type cover | awk '{ print $NF }') == "image/jpeg" ]]; then
            mv cover cover.jpg
            convert cover.jpg /tmp/cover.png
            mogrify -resize "$size" -bordercolor snow -background black -polaroid "$angle" /tmp/cover.png
            convert -size "$res" "$image_temp" -page ${coordinates[$i]} /tmp/cover.png -layers flatten "$wallpaper"
            feh --bg-scale "$wallpaper"
            cp "$wallpaper" "$image_temp"
            rm /tmp/cover.png
        fi
    fi
}

reset () {
    if [[ -z $(mpc current) ]]; then
        echo "No song playing, skipping"
    else
        dir="$(dirname "$(mpc current --format %file%)")"
        cd "$mpdpath"/"$dir"
        mv folder.jpg cover.jpg>/dev/null 2>&1
        mv folder.png cover.png>/dev/null 2>&1
        mv cover.png cover.png.bak>/dev/null 2>&1
        mv cover.jpg cover.jpg.bak>/dev/null 2>&1
        getCover noset
        if [[ -a cover.png ]]; then
            rm -f cover.png.bak
        else
            rename .png.bak '.png' *.bak
        fi
        if [[ -a cover.jpg ]]; then
            rm -f cover.jpg.bak
        else
            rename .jpg.bak '.jpg' *.bak
        fi
    fi
}

if [[ $1 == reset ]]; then
    reset
else
    main
fi

